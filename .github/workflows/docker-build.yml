name: docker images cicd
# 触发器设置，仅在创建Tag时触发
on:
  push:
    tags:
      - '*'  # 表示匹配任意标签，可根据实际需求进一步限定标签格式，比如v*表示以v开头的标签等
# 项目任务，任务之间可以并行调度
jobs:
  build:
    # 选择云端运行的环境
    runs-on: ubuntu-latest
    steps:
      # uses代表使用一个模块，此处使用的是checkout模块，将github项目文件导入到当前环境中
      - uses: actions/checkout@v4
        # 使用with跟在后面来为前面的模块输入参数
        with:
          submodules: 'true'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          # 这里用到了github的secrets功能，避免账户和密码随仓库泄露
          username: wgmac
          password: ${{ secrets.DOCKER_TOKEN }}
      # 设置当前的发行版本tag，由于触发条件改变，这里可以优化下逻辑判断（可选，看具体情况）
      - name: Release version
        id: release_version
        run: |
          echo "GITHUB_REF=${GITHUB_REF}"
          github_ref = "${GITHUB_REF}"
          if github_ref.startswith("refs/tags/"):
            app_version="${GITHUB_REF##*/}"
            if app_version.length() = 0:
              app_version="latest"
            echo "app_version=$app_version" >> $GITHUB_ENV
          fi
      # 开始构建镜像
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          build-args: |
            GITHUB_TOKEN=${{ secrets.RELEASE_TOKEN }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm
          push: true
          # 指定用户/仓库名，根据标签来构建具体版本的镜像tag，latest可以单独考虑是否需要保留等情况
          tags: |
            wgmac/mysql-backup:${{ steps.release_version.outputs.app_version }}
            wgmac/mysql-backup:latest
